[{"title":"Github Actions的使用","url":"/2025/03/13/Github Actions的使用/","content":"一、关于GitHub ActionsGitHub Actions 是一个用于自动化软件开发工作流程的持续集成和持续交付（CI&#x2F;CD）平台。它允许开发者在 GitHub 仓库中定义和配置各种自动化任务，例如构建、测试、部署等。以下是 GitHub Actions 的一些关键概念和功能： 1. 工作流（Workflow）工作流是一个自动化过程，定义了一系列需要执行的任务。工作流文件使用 YAML 格式编写，存放在仓库的 .github/workflows 目录下。一个仓库可以包含多个工作流文件。 2. 事件（Event）工作流可以由各种事件触发，例如代码推送（push）、拉取请求（pull request）、计划任务（schedule）等。常见的事件包括： push：在代码推送到仓库时触发。 pull_request：在创建拉取请求或更新拉取请求时触发。 schedule：基于时间表定期触发。 3. 作业（Job）工作流由一个或多个作业组成，每个作业包含一系列步骤。作业可以并行或顺序执行。每个作业在一个新的虚拟环境中运行，可以指定使用不同的操作系统（如 Ubuntu、Windows 或 macOS）。 4. 步骤（Step）步骤是作业中的基本执行单元，每个步骤执行一个单独的任务。步骤可以运行命令行命令或使用预定义的操作（action）。 5. 操作（Action）操作是可复用的独立任务，可以在工作流的步骤中调用。GitHub 提供了许多内置操作，开发者也可以编写自定义操作或使用社区分享的操作。 二、触发方式GitHub Actions 工作流可以通过多种方式触发，包括手动触发、事件触发和定时触发等。以下是一些常见的触发方式： 1. 事件触发（Event Triggers）工作流可以通过各种 GitHub 事件触发，如代码推送、拉取请求、标签创建等。以下是一些常见的事件触发方式： push：在代码推送到仓库时触发。 pull_request：在创建或更新拉取请求时触发。 issues：在创建或更新 issue 时触发。 release：在创建、发布或删除发布版本时触发。 2. 定时触发（Scheduled Triggers）工作流可以通过计划任务定时触发，使用 schedule 关键字和 cron 表达式定义时间间隔。 3. 手动触发（Manual Triggers）工作流可以通过手动触发，使用 workflow_dispatch 关键字。 在 GitHub 仓库的 Actions 页面中，可以手动触发这些工作流并提供输入参数。 4. 其他触发方式 repository_dispatch：通过外部事件触发工作流，可以使用 GitHub API 触发。 workflow_call：允许一个工作流调用另一个工作流。 workflow_run：在另一个工作流完成后触发。 三、优化GitHub Actions工作流自身的定时触发方式schedule存在缺点，经过测试存在几分钟不等的随机延时，因此对于想要进行精准定时的工作流，使用自身定时触发方式无法满足需求。这里可以采用外部定时，模拟手动的方式来处理。 1. 设置为手动触发将工作流触发方式设置为手动触发 2. 配置corn-job定时工作Corn-job 是一个定时任务调度和管理平台，旨在帮助用户轻松创建、管理和监控定时任务。Corn-job 是一个完全免费的平台。下面是他们的宣言：Scheduled execution of your websites and scripts.Just in time or in flexible intervals, from minute-by-minute to once in a year.Absolutely free. 网站首页如下https://cron-job.org (1) 获取 GitHub Personal Access Token首先需要一个 GitHub Personal Access Token 以便认证和授权，步骤如下： 登录 GitHub。 进入 Settings。 在左侧菜单中选择 “Developer settings”。 选择 “Personal access tokens”。 点击 “Generate new token” 并选择所需的权限（例如 repo 和 workflow）。 注意：生成的Token只显示一次，关闭后无法再查看，生成后立即保存。 (2) 配置 Corn-job在 Corn-job 中配置调用 GitHub Actions 手动触发的工作流时，需要填写以下信息： 执行计划即工作流触发的时间，根据需求配置即可。 网址用于手动触发 GitHub Actions 工作流的 API 端点格式如下： 将&#123;...&#125;字段分别替换为以下信息 &#123;owner&#125;：GitHub 用户名或组织名。 &#123;repo&#125;：配置actions的仓库名。 &#123;workflow_id&#125;：工作流文件名或工作流 ID，工作流文件即.github/workflows目录下的.yml文件 例如，对于 GitHub 用户 abc 的仓库 xyz123，工作流文件名为 main.yml，网址如下： 请求方法位于进阶设置处选择 POST 方法 请求头即标头位于进阶设置处需要包含授权信息： 一个标头包含一对键和数值 键设置为 值设置为 将 YOUR_PERSONAL_ACCESS_TOKEN 替换为步骤(1)中获取的 GitHub Personal Access Token 请求本体位于进阶设置处请求体需要包含触发工作流的参数，例如分支名： (3) 保存和测试配置成功后可以手动触发corn-job的定时任务测试，验证是否可以成功触发GitHub Actions工作流。","date":"2025-03-13","tags":["github"]},{"title":"Hello World","url":"/2025/03/03/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment","date":"2025-03-03"},{"title":"about","url":"/about/index.html","content":"一个非常优秀的简约主题","date":"2025-02-22"},{"title":"categories","url":"/categories/index.html","content":"","date":"2025-03-09"},{"title":"tags","url":"/tags/index.html","content":"","date":"2025-03-09"},{"title":"search","url":"/search/index.html","content":"","date":"2025-03-09"}]